# If you come from bash you might have to change your $PATH.

# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.

export ZSH="/Users/KS61347/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will

# load a random theme each time oh-my-zsh is loaded, in which case,

# to know which specific one was loaded, run: echo $RANDOM_THEME

# See [https://github.com/ohmyzsh/ohmyzsh/wiki/Themes](https://github.com/ohmyzsh/ohmyzsh/wiki/Themes)

ZSH_THEME="kira"

# Set list of themes to pick from when loading at random

# Setting this variable when ZSH_THEME=random will cause zsh to load

# a theme from this variable instead of looking in $ZSH/themes/

# If set to an empty array, this variable will have no effect.

# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.

# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.

# Case-sensitive completion must be off. _ and - will be interchangeable.

# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.

# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.

# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).

# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.

# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.

# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.

# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.

# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.

# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files

# under VCS as dirty. This makes repository status check for large repositories

# much, much faster.

# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time

# stamp shown in the history command output.

# You can set one of the optional three formats:

# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"

# or set a custom format using the strftime function format specifications,

# see 'man strftime' for details.

# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?

# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?

# Standard plugins can be found in $ZSH/plugins/

# Custom plugins may be added to $ZSH_CUSTOM/plugins/

# Example format: plugins=(rails git textmate ruby lighthouse)

# Add wisely, as too many plugins slow down shell startup.

plugins=(git vscode xcode vi-mode colored-man-pages zsh-autosuggestions z dotenv)

source $ZSH/oh-my-zsh.sh

export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && . "/opt/homebrew/opt/nvm/nvm.sh" # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && . "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" # This loads nvm bash_completion

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment

# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions

# if [[ -n $SSH_CONNECTION ]]; then

# export EDITOR='vim'

# else

# export EDITOR='mvim'

# fi

# Compilation flags

# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,

# plugins, and themes. Aliases can be placed here, though oh-my-zsh

# users are encouraged to define aliases within the ZSH_CUSTOM folder.

# For a full list of active aliases, run `alias`.

# Example aliases

# alias zshconfig="mate ~/.zshrc"

# alias ohmyzsh="mate ~/.oh-my-zsh"

# typing `cd gits` will take me to the gits folder no matter where I am
hash -d gits=/Users/KS61347/Gits
hash -d Gits=/Users/KS61347/Gits
setopt cdablevars
gits=/Users/KS61347/Gits
Gits=/Users/KS61347/Gits

function temp {
touch /tmp/$1
code -n /tmp/$1
}

function journal() {
  node /Users/ks61347/scripts/handleJournal.mjs
}

function esperanto {
	cd /Users/ks61347/Esperanto
}

# vim mode config

# ---------------

# Activate vim mode.

bindkey -v

# Remove mode switching delay.

KEYTIMEOUT=5

# Change cursor shape for different vi modes.

function zle-keymap-select {
if [[ ${KEYMAP} == vicmd ]] ||
[[ $1 = 'block' ]]; then
echo -ne '\e[1 q'

elif [[ ${KEYMAP} == main ]] ||
[[ ${KEYMAP} == viins ]] ||
[[ ${KEYMAP} = '' ]] ||
[[ $1 = 'beam' ]]; then
echo -ne '\e[5 q'
fi
}
zle -N zle-keymap-select

# Use beam shape cursor on startup.

echo -ne '\e[5 q'

# Use beam shape cursor for each new prompt.

preexec() {
echo -ne '\e[5 q'
}

source ~/.iterm2_shell_integration.zsh

export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && . "/opt/homebrew/opt/nvm/nvm.sh" # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && . "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" # This loads nvm bash_completion[ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion" # This loads nvm bash_completion

export HOMEBREW_CASK_OPTS=--no-quarantine
eval "$(starship init zsh)"

# bun completions

[ -s "/Users/KS61347/.bun/_bun" ] && source "/Users/KS61347/.bun/_bun"

# Bun

export BUN_INSTALL="/Users/KS61347/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

export PATH="$PATH:/Users/KS61347/.bin"

export NPM_TOKEN=REDACTED
export YARN_NPM_AUTH_IDENT=REDACTED
export NODE_EXTRA_CA_CERTS=/Users/$(whoami)/Certs/KrogerRootCA.pem

eval "$(github-copilot-cli alias -- "$0")"

# Automatically use the new directory's Node version, or prompt to to install if it's missing
autoload -U add-zsh-hook
add-zsh-hook -Uz chpwd (){ 
	if [[ -f .nvmrc ]]; then
    local nvm_version="$(<.nvmrc)"
    local installed_version=$(nvm version $nvm_version)
    
    if [[ $installed_version == "N/A" ]]; then
      echo "Node.js version specified in .nvmrc ($nvm_version) is not installed."
      echo "Would you like to install it? [y/N]"
      
      read response
      if [[ $response == "y" || $response == "Y" ]]; then
        nvm install $nvm_version
      else
        echo "Skipping Node.js version switch."
      fi
    else
      nvm use
    fi
  fi
	}
# bun completions
[ -s "/opt/homebrew/Cellar/bun/0.6.13/share/zsh/site-functions/_bun" ] && source "/opt/homebrew/Cellar/bun/0.6.13/share/zsh/site-functions/_bun"

# bun completions
[ -s "/Users/ks61347/.bun/_bun" ] && source "/Users/ks61347/.bun/_bun"

# Remap L and H to end of line and beginning of line
bindkey -M vicmd 'L' end-of-line
bindkey -M vicmd 'H' beginning-of-line
